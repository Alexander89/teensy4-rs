[package]
name = "teensy4-bsp"
version = "0.1.0"
authors = ["Ian McIntyre <ianpmcintyre@gmail.com>"]
edition = "2018"
license = "MIT OR Apache-2.0"
repository = "https://github.com/mciantyre/teensy4-rs"
description = """
Rust-based BSP for the Teensy 4.
Part of the teensy4-rs project.
"""

[dependencies]
cortex-m = "0.6.2"
cortex-m-rt = "0.6.12" # Note: not the 'real' cortex-m-rt
teensy4-fcb = { path = "teensy4-fcb" }

[dependencies.imxrt-hal]
version = "0.3.0"
path = "../imxrt/imxrt/imxrt-hal"
features = ["imxrt1062", "rt"]

[dependencies.imxrt-iomuxc]
path = "../imxrt/iomuxc"

[dependencies.imxrt106x-iomuxc]
path = "../imxrt/iomuxc/imxrt106x-iomuxc"

# Tied to "systick" feature, since
# SysTick implements a blocking delay trait
[dependencies.embedded-hal]
version = "0.2.4"
optional = true

# Only need logging when "usb-logging" is enabled
[dependencies.log]
version = "0.4.8"
optional = true

# Only needed when "usb-logging" is enabled
[dependencies.teensy4-usb-sys]
path = "teensy4-usb-sys"
optional = true

[dev-dependencies]
cortex-m-rtic = "0.5.3"
embedded-hal = "0.2.4"
heapless = "0.5.5"
log = "0.4.8"
imxrt-uart-log = "0.1.0"
nb = "0.1.2"
panic-halt = "0.2.0"

[[example]]
name = "rtic_led"
path = "examples/rtic_led.rs"
required-features = ["rtic"]

[[example]]
name = "rtic_blink"
path = "examples/rtic_blink.rs"
required-features = ["rtic"]

[[example]]
name = "rtic_uart_log"
path = "examples/rtic_uart_log.rs"
required-features = ["rtic"]

[[example]]
name = "rtic_dma_uart_log"
path = "examples/rtic_dma_uart_log.rs"
required-features = ["rtic"]

[workspace]
members = [
    "cortex-m-rt-patch",
    "teensy4-fcb",
    "teensy4-rt",
    "teensy4-usb-sys",
]

[features]
# Default features established for prototype development
default = ["usb-logging", "systick"]
# Enables the USB logging stack
#
# This will introduce the teensy4-usb-sys bindings into the build
# graph. It also requires systick, since the USB stack depends on
# the systick counter for timekeeping.
usb-logging = ["systick", "teensy4-usb-sys", "log"]
# Include a definition of the SysTick exception handler. This enables
# a simple delay() spinloop that waits for the timer to elapse.
#
# NOTE: This feature is incompatible with the `rtic` crate as `rtic`
# provides its own `SysTick` definition.
systick = ["embedded-hal"]
# Provides the `Peripherals::steal` constructor required by `rtic`.
#
# NOTE: When using this feature along with the `rtic` crate the
# default features must first be disabled in order to avoid a
# duplicate definition of `SysTick`.
rtic = []

# Don't optimize build dependencies, like proc macros.
# Helps with build times.
[profile.release.build-override]
opt-level = 0

# Patch `cortex-m-rt` for reasons described here:
# https://github.com/mciantyre/teensy4-rs#runtime
[patch.crates-io.cortex-m-rt]
path = "cortex-m-rt-patch"

# Patch `imxrt-hal` so that we may access the `hal::Peripherals::steal`
# constructor. This patch should be removed once a new version of
# `imxrt-hal` is published with the new constructor.
[patch.crates-io.imxrt-hal]
git = "https://github.com/imxrt-rs/imxrt-rs"
rev = "0305aed"